#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.4 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 86 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 57 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 190 190 190 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 185 220 113 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 155 255 155 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 116 116 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 18 67 155 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 30 70 190 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 75 135 185 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 208 208 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 116 116 255 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 125 255 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 143 15 223 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 141 19 5 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 244 194 71 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 127 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 86 86 86 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 255 255 30 3 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 255 255 0 31 31 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 0 0 0 31 31 -1 -1 0 1
#"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1           0 519 0 29 3 12 #"#lang racket"
0 0 25 29 1 #"\n"
0 0 17 3 47 #";; Programming Languages Homework 5 Simple Test"
0 0 25 29 1 #"\n"
0 0 17 3 61
#";; Save this file to the same directory as your homework file"
0 0 25 29 1 #"\n"
0 0 17 3 116
(
 #";; These are basic tests. Passing these tests does not guarantee tha"
 #"t your code will pass the actual homework grader"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 74
(
 #";; Be sure to put your homework file in the same folder as this test"
 #" file."
) 0 0 25 29 1 #"\n"
0 0 17 3 66
#";; Uncomment the line below and, if necessary, change the filename"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"hw5.rkt\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"tests"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"test-suite"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 19 3 31 #"\"Sample tests for Assignment 5\""
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 48 #";; check racketlist to mupllist with normal list"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 12 #"check-equal?"
0 0 25 3 2 #" ("
0 0 14 3 20 #"racketlist->mupllist"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 5 #"))) ("
0 0 14 3 5 #"apair"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 5 #"apair"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 3 #") ("
0 0 14 3 5 #"aunit"
0 0 25 3 4 #"))) "
0 0 19 3 27 #"\"racketlist->mupllist test\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 48 #";; check mupllist to racketlist with normal list"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 12 #"check-equal?"
0 0 25 3 2 #" ("
0 0 14 3 20 #"mupllist->racketlist"
0 0 25 3 2 #" ("
0 0 14 3 5 #"apair"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 5 #"apair"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 3 #") ("
0 0 14 3 5 #"aunit"
0 0 25 3 6 #")))) ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 3 #")) "
0 0 19 3 27 #"\"mupllist->racketlist test\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 37 #";; tests if ifgreater returns (int 2)"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 12 #"check-equal?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 2 #" ("
0 0 14 3 9 #"ifgreater"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 5 #"))) ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 19 3 16 #"\"ifgreater test\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 12 #";; mlet test"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 12 #"check-equal?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"mlet"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 3 #"add"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #") ("
0 0 14 3 3 #"var"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 25 3 6 #")))) ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 2 #") "
0 0 19 3 11 #"\"mlet test\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 12 #";; call test"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 12 #"check-equal?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"call"
0 0 25 3 2 #" ("
0 0 14 3 7 #"closure"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"() ("
0 0 14 3 3 #"fun"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 25 3 2 #" ("
0 0 14 3 3 #"add"
0 0 25 3 2 #" ("
0 0 14 3 3 #"var"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 6 #")))) ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 5 #"))) ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 2 #") "
0 0 19 3 11 #"\"call test\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 10 #";;snd test"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 12 #"check-equal?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"snd"
0 0 25 3 2 #" ("
0 0 14 3 5 #"apair"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 6 #")))) ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 19 3 10 #"\"snd test\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 15 #";; isaunit test"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 12 #"check-equal?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 2 #" ("
0 0 14 3 7 #"isaunit"
0 0 25 3 2 #" ("
0 0 14 3 7 #"closure"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"() ("
0 0 14 3 3 #"fun"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 25 3 2 #" ("
0 0 14 3 5 #"aunit"
0 0 25 3 7 #"))))) ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 19 3 14 #"\"isaunit test\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 15 #";; ifaunit test"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 12 #"check-equal?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ifaunit"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 5 #"))) ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 19 3 14 #"\"ifaunit test\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 13 #";; mlet* test"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 12 #"check-equal?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 2 #" ("
0 0 14 3 5 #"mlet*"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 5 #"))) ("
0 0 14 3 3 #"var"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 25 3 5 #"))) ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 2 #") "
0 0 19 3 12 #"\"mlet* test\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 12 #";; ifeq test"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 12 #"check-equal?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"ifeq"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 5 #"))) ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 19 3 11 #"\"ifeq test\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 16 #";; mupl-map test"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 12 #"check-equal?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 2 #" ("
0 0 14 3 1 #"c"
0 0 14 3 3 #"all"
0 0 25 3 2 #" ("
0 0 14 3 4 #"call"
0 0 25 3 1 #" "
0 0 14 3 8 #"mupl-map"
0 0 25 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 25 3 2 #" ("
0 0 14 3 3 #"add"
0 0 25 3 2 #" ("
0 0 14 3 3 #"var"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 6 #")))) ("
0 0 14 3 5 #"apair"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 5 #"aunit"
0 0 25 3 5 #")))) "
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 5 #"apair"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 3 #") ("
0 0 14 3 5 #"aunit"
0 0 25 3 3 #")) "
0 0 19 3 15 #"\"mupl-map test\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 37 #";; problems 1, 2, and 4 combined test"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 12 #"check-equal?"
0 0 25 3 2 #" ("
0 0 14 3 20 #"mupllist->racketlist"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"call"
0 0 25 3 2 #" ("
0 0 14 3 4 #"call"
0 0 25 3 1 #" "
0 0 14 3 12 #"mupl-mapAddN"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 20 #"racketlist->mupllist"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 8 #")))))) ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 3 #") ("
0 0 14 3 3 #"int"
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 25 3 3 #")) "
0 0 19 3 15 #"\"combined test\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 16 #"rackunit/text-ui"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 16 #";; runs the test"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 9 #"run-tests"
0 0 25 3 1 #" "
0 0 14 3 5 #"tests"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0           0
